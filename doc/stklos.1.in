.\" -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH STKLOS 1 "version @VERSION@"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n1 empty lines
.\" for manpage-specific macros, see man(7)
.SH NAME
stklos \- An efficient Scheme System providing a powerful Object
System

.SH SYNOPSYS
\fbstklos\fR [OPTION ...] [ARGUMENT ... ]

.SH DESCRIPTION
.B STklos
is a free Scheme System (nearly) conforming to R7RS. The aim of this
implementation is to be fast as well as light. The implementation is
based on an ad-hoc Virtual Machine.
.LP
The salient points of STklos are:
.IP "" 4
- an efficient and powerful object system based on CLOS providing:
.IP "" 8
+ Multiple Inheritance,
.IP "" 8
+ Generic Functions,
.IP "" 8
+ Multi-methods
.IP "" 8
+ an efficient MOP (Meta Object Protocol)
.IP "" 4
- a simple to use module system
.IP "" 4
- implementing the full tower of numbers defined in R7RS
.IP "" 4
- an easy connection to the GTK+ toolkit
.IP "" 4
- Perl compatible regular expressions thanks to the PCRE package
.IP "" 4
- properly implemented tail recursive calls

.SH OPTIONS
Here are the options available in the version @VERSION@ of
.B stklos.

.IP "-l file, --load=file"
load 'file' before going interactive
.IP "-f file, --file=file"
use 'file' as program
.IP "-I dir"
prepend 'dir' to the directory path. This option can be used several
times.
.IP "-A dir"
append 'dir' to the directory path. This option can be used several
times.
.IP "-e sexpr, --execute=sexpr"
evaluate the given sexpr and exit
.IP "-b file, --boot-file=file"
use 'file' to boot the system instead of the default one
.IP "-D directory, --conf-dir=directory"
use the given directory to store the various configuration files. This
directory is also used to store the packages installed with the
\fIstklos-pkg(1)\fR command. Note that the shell variable
\fISTKLOS_CONFDIR\fR can also be used to set this directory (see below).
.IP "-q, --no-init-file"
quiet: do not load the user init file.
.IP "-Q, --no-startup-message"
quiet: do not show the startup message.
.IP "-i, --interactive"
be interactive, even if the command finds it is not the case. This
option is generally useful when used inside emacs since it permits to
display the REPL prompts.
.IP "-n, --no-line-editor"
tell the REPL to not use the line editor even if GNU readline or BSD
libedit libraries are found. This permit to use an external tool such
as rlwrap(1) instead of the internal line editor support.
.IP "-d, --debug"
insert information to ease debugging (e.g, line numbers, signaling
usage of undefined symbols, ...). Can be used multiple times to
increase the debugging level;
.IP "-s, --stack-size=n"
use a stack of \fBn\fR cells.
.IP "--case-insensitive"
be case insensitive as in R5RS (see below).
.IP "-c, --case-sensitive"
be case sensitive as in R7RS. This is the default value (unless \fBstklos\fR
has been built with the \fI--enable-case-insensitive\fR configure
option). This option (and the previous one) permits to change the default
behavior.
.IP "-u yes|no, --utf8-encoding=yes|no"
At initialisation time, \fBSTklos\fR infers the current locale from the
\fILC_ALL\fR variable. From the character encoding used in the selected
locale, \fBSTklos\fR determines if UTF-8 should be used for representing
strings.

The \fI--utf8-encoding\fR permits to force the encoding used. Note
that if \fILC_ALL\fR is unset and this option is not used, UTF-8
encoding will be used.

.IP "-F, --compiler-flags=list"
permits to set compiler flags to the to the values given in \fIlist\fR.
Boolean flags must begin by a '+' or a '-' character to indicate if the flag is set
or unset. Valued flags, must be followed by a '=' and the value given to the flag.
Flags are separated by the ',' character. For instance, the following
list \fI-F=+line-info,-time-display,unroll-iterations=5\fR sets the
\fIline-info\fR option, unsets the \fItime-display\fR option and initializes the
\fIunroll-iteration\fR to 5. The following flags can be used with
this option:
.IP "" 10
- \fIline-info\fR insert line numbers in the generated file. Setting this flag
is equivalent to the \fI-l\fR option. This flag uses the parameter
\fIcompiler:gen-line-number\fR.
.IP "" 10
- \fIshow-instructions\fR can be used to insert the textual instructions
into compiled files. This flag uses the parameter
\fIcompiler:show-assembly-code\fR.
.IP "" 10
- \fItime-display\fR can be used to display or not the time used to compile
a file. This flag uses the parameter
\fIcompiler:time-display\fR.
.IP "" 10
- \fIkeep-formals\fR can be used to control if formal arguments are stored in
user procedures. This flag uses the parameter
\fIcompiler:keep-formal\fR.
.IP "" 10
- \fIkeep-source\fR can be used to control if the source code is  stored in
user procedures. This flag uses the parameter
\fIcompiler:keep-source\fR.
.IP "" 10
- \fIinline-usuals\fR can be used to control if the usual functions are inlined
in produced code. This flag uses the parameter
\fIcompiler:inline-common-functions\fR.
.IP "" 10
- \fIsource-rewrite\fR can be used to control if the compiler tries to
rewrite/simplify source code before compiling it. This flag uses
the parameter \fIcompiler:source-rewrite\fR.
.IP "" 10
- \fIunroll-iterations\fR can be used to set the number of iterations to be unrolled
in loops. This flag uses the parameter \fIcompiler:unroll-iterations\fR and its
default value is 4.
.IP "" 10
- \fIpeephole-optimizer\fR can be used to activate or deactivate the peephole
optimizer during compilation. The peephole optimizer is used to change a
succession of instructions by another set of instructions that has better
performance. This flag uses the parameter \fIcompiler:peehole-optimizer\fR.
By default, the peephole optimizer is activated.
.IP "-v, --version"
print program version and exit.
.IP "-V"
print detailed program version and information in machine-readable format,
as per SRFI-176, and exit.
.IP "-h, --help"
print this help and exit.
.IP "--"
This special option signals the end of the \fBstklos\fR command. The
arguments placed after this option are taken as program arguments,
even if they start with a "-" character.

.SH NOTES

Default case sensitivity depends on the way STklos is built.

.SH ENVIRONMENT VARIABLES

.IP "STKLOS_LOAD_PATH"
This is a colon-separated list of directories in which \fBstklos\fR
looks for loading files. It is used by functions such as \fBload\fR
or \fBtry-load\fR.

.IP "STKLOS_FRAMES"
This variable must contains an integer which indicates the number of
frames printed on an error. Use the value \fB0\fR for an unlimited
back-trace.

.IP "STKLOS_CONFDIR"
This variable can be used to designate the directory used by \fBstklos\fR
to store its configuration or packages files. If not set, the default
\fBstklos\fR configuration directory is by default \fB${XDG_CONFIG_HOME}/stklos\fR (or \fB~/.config/stklos/\fR if  \fBXDG_CONFIG_HOME\fR is unset).

.SH FILES

.IP "<stklos-conf-dir>/stklosrc"
This file is the user init file which is loaded when \fBstklos\fR
starts. Use the \fB-q\fR to avoid the loading of this file.


.SH "SEE ALSO"
.BR stklos-config (1),
.BR stklos-compile (1),
.BR stklos-pkg (1)

.LP
The full documentation for
.B stklos
is available at http://www.stklos.net/documentation.html
